# Log Analyzer



## Description
This is a tool to analyze a server access log file. It can:

1. Load a given log file to a running MySQL database in an access log table
2. Analyze the data in the access log table for requests from IPs that exceed the input time and threshold parameters, create entries for these IPs in the database in a table representing banned IPs, and output the banned IP list to console



## Dependencies
* A MySQL database that is:
	- running on localhost port 3306
	- compatible with [MySQL Connector/J 5.1.44 JDBC driver](https://dev.mysql.com/downloads/connector/j/)
* Maven 3.3.9 installed
* Java JDK 1.8



## Instructions:
1. Run the create_schema.sql file to set up the schema in the database

2. Run the following commands to build and run the jar:
	
	```sh
    mvn clean install
    cd target
    ```

3. Run the tool with any given parameters. For example:
	
    a. Load data and run analytics:
		
       java -cp "parser.jar" com.ef.Parser --accesslog=../access.log --startDate=2017-01-01.13:00:00 --duration=hourly --threshold=100 
		
    b. Run analytics without loading data:
			
       java -cp "parser.jar" com.ef.Parser --startDate=2017-01-01.00:00:00 --duration=daily --threshold=500
	
4. Use the queries in verify_test.sql script to verify the results from the commands



## Usage:
The jar file should be executed from the command line in the following format:

	java -cp "parser.jar" com.ef.Parser --startDate=2017-01-01.00:00:00 --duration=daily --threshold=500

Parameters:

* --accesslog - path to log file, can be absolute or relative
* --startDate - start date and time for analyzing log data, must be in "yyyy-MM-dd.HH:mm:ss" format
* --duration - duration of time to analyze log after start date parameter, must be either "hourly" or "daily"
* --threshold - number of requests before a given IP should be added to the banned IPs table



## Design Decisions:

* Column widths for all columns have extra space for variable data sizes. the extra space is ~2x the maximum column sizes provided in the sample access.log file rounded to the nearest power of 2.
	
* When the --accessLog parameter is supplied, old values in access log table will be cleared and replaced with new values from the provided file
	
* When the parameters --startDate, --duration, and --threshold are supplied, old values in the blocked ips table will be cleared and replaced with new values generated by the command.

* The database layer is unit tested using H2 in-memory mode, so MySQL-specific functionality must be manually tested.
